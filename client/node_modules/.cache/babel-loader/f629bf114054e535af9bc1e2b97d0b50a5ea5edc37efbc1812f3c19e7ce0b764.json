{"ast":null,"code":"var _jsxFileName = \"/home/william/Documents/development/luckbrc/client/src/components/WalletConnect/WalletConnect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./WalletConnect.css\";\nimport { getUsername } from \"../../handlers/handlers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WalletConnect(_ref) {\n  _s();\n  let {\n    userBtcAddress,\n    setUserBtcAddress\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    setUsername(getUsername(userBtcAddress));\n  }, [userBtcAddress]);\n  async function unisatConnect() {\n    if (typeof window.unisat === \"undefined\") {\n      window.alert(\"Please Install Unisat Wallet!\");\n      window.open(\"http://unisat.io\");\n      return;\n    }\n    if (userBtcAddress !== \"\") {\n      setUserBtcAddress(\"\");\n      return;\n    }\n    try {\n      let accounts = await window.unisat.requestAccounts();\n      setUserBtcAddress(accounts[0]);\n      localStorage.setItem(\"BTC_ADDRESS\", accounts[0]);\n    } catch (error) {\n      console.log(\"Unisat Connection Failed\");\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WalletConnect\",\n    onClick: () => unisatConnect(),\n    children: userBtcAddress === \"\" ? \"CONNECT WALLET\" : userBtcAddress.substring(0, 3) + \"...\" + userBtcAddress.substring(userBtcAddress.length, userBtcAddress.length - 3)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletConnect, \"l28rGzbSkdZsfBKrYA2sPBHhH7E=\");\n_c = WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useEffect","useState","getUsername","jsxDEV","_jsxDEV","WalletConnect","_ref","_s","userBtcAddress","setUserBtcAddress","username","setUsername","unisatConnect","window","unisat","alert","open","accounts","requestAccounts","localStorage","setItem","error","console","log","className","onClick","children","substring","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/william/Documents/development/luckbrc/client/src/components/WalletConnect/WalletConnect.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./WalletConnect.css\";\nimport { getUsername } from \"../../handlers/handlers\";\n\ndeclare global {\n  interface Window {\n    unisat: any;\n  }\n}\n\ninterface WalletConnect {\n  userBtcAddress: string;\n  setUserBtcAddress: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport default function WalletConnect({\n  userBtcAddress,\n  setUserBtcAddress,\n}: WalletConnect) {\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    setUsername(getUsername(userBtcAddress));\n  }, [userBtcAddress]);\n\n  async function unisatConnect() {\n    if (typeof window.unisat === \"undefined\") {\n      window.alert(\"Please Install Unisat Wallet!\");\n      window.open(\"http://unisat.io\");\n      return;\n    }\n    if (userBtcAddress !== \"\") {\n      setUserBtcAddress(\"\");\n      return;\n    }\n    try {\n      let accounts = await window.unisat.requestAccounts();\n      setUserBtcAddress(accounts[0]);\n      localStorage.setItem(\"BTC_ADDRESS\", accounts[0]);\n    } catch (error) {\n      console.log(\"Unisat Connection Failed\");\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"WalletConnect\" onClick={() => unisatConnect()}>\n      {userBtcAddress === \"\"\n        ? \"CONNECT WALLET\"\n        : userBtcAddress.substring(0, 3) +\n          \"...\" +\n          userBtcAddress.substring(\n            userBtcAddress.length,\n            userBtcAddress.length - 3\n          )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAatD,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAGnB;EAAAC,EAAA;EAAA,IAHoB;IACpCC,cAAc;IACdC;EACa,CAAC,GAAAH,IAAA;EACd,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdW,WAAW,CAACT,WAAW,CAACM,cAAc,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,eAAeI,aAAaA,CAAA,EAAG;IAC7B,IAAI,OAAOC,MAAM,CAACC,MAAM,KAAK,WAAW,EAAE;MACxCD,MAAM,CAACE,KAAK,CAAC,+BAA+B,CAAC;MAC7CF,MAAM,CAACG,IAAI,CAAC,kBAAkB,CAAC;MAC/B;IACF;IACA,IAAIR,cAAc,KAAK,EAAE,EAAE;MACzBC,iBAAiB,CAAC,EAAE,CAAC;MACrB;IACF;IACA,IAAI;MACF,IAAIQ,QAAQ,GAAG,MAAMJ,MAAM,CAACC,MAAM,CAACI,eAAe,CAAC,CAAC;MACpDT,iBAAiB,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC9BE,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEA,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEA,CAAA,KAAMb,aAAa,CAAC,CAAE;IAAAc,QAAA,EAC3DlB,cAAc,KAAK,EAAE,GAClB,gBAAgB,GAChBA,cAAc,CAACmB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAC9B,KAAK,GACLnB,cAAc,CAACmB,SAAS,CACtBnB,cAAc,CAACoB,MAAM,EACrBpB,cAAc,CAACoB,MAAM,GAAG,CAC1B;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CA1CuBF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}